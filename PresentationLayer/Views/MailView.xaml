<Window x:Class="PresentationLayer.MailView"
        x:Name="MailWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PresentationLayer"
        mc:Ignorable="d"
        Style="{StaticResource WindowStyle}">

    <Grid>

        <Grid.RowDefinitions>
            <!-- Header -->
            <RowDefinition Height="40"/>
            <!-- ProgressBar -->
            <RowDefinition Height="4"/>
            <!-- Body -->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" Background="Transparent" BorderThickness="{StaticResource BottomBorder}" BorderBrush="{StaticResource BorderColor}" 
                MouseLeftButtonDown="DragMoveWindow">

            <Grid>

                <!-- User -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button x:Name="UserButton" Style="{StaticResource ButtonWithTextAndIconStyle}" 
                        Tag="{StaticResource UserIcon}" Background="{StaticResource TransparentButtonBackgroundColor}" BorderBrush="{StaticResource TransparentButtonBackgroundDarkColor}" Foreground="{StaticResource TransparentButtonForegroundColor}"
                        Content="{Binding UserEmail}" ToolTip="{StaticResource MinimizeString}" Height="{StaticResource HeaderButtonSize}"/>
                </StackPanel>

                <!-- Buttons -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                    <!-- Refresh Button -->
                    <Button Style="{StaticResource ButtonWithIconStyle}" Content="{StaticResource RefreshIcon}" ToolTip="{StaticResource RefreshString}" 
                            Background="{StaticResource TransparentButtonBackgroundColor}" BorderBrush="{StaticResource TransparentButtonBackgroundDarkColor}" Foreground="{StaticResource TransparentButtonForegroundColor}"
                            Width="{StaticResource HeaderButtonSize}" Height="{StaticResource HeaderButtonSize}"
                            Command="{Binding RefreshView}"/>

                    <!-- Settings Button -->
                    <!--<Button Style="{StaticResource ButtonWithIconStyle}" Content="{StaticResource SettingsIcon}" ToolTip="{StaticResource SettingsString}"
                            Background="{StaticResource TransparentButtonBackgroundColor}" BorderBrush="{StaticResource TransparentButtonBackgroundDarkColor}" Foreground="{StaticResource TransparentButtonForegroundColor}"
                            Width="{StaticResource HeaderButtonSize}" Height="{StaticResource HeaderButtonSize}"
                            Command="{Binding OpenSettings}"/>-->

                    <!-- Minimize Button -->
                    <Button Style="{StaticResource ButtonWithIconStyle}" Content="{StaticResource MinimizeIcon}" ToolTip="{StaticResource MinimizeString}"
                            Background="{StaticResource TransparentButtonBackgroundColor}" BorderBrush="{StaticResource TransparentButtonBackgroundDarkColor}" Foreground="{StaticResource TransparentButtonForegroundColor}"
                            Width="{StaticResource HeaderButtonSize}" Height="{StaticResource HeaderButtonSize}"
                            Command="{Binding Minimize}" CommandParameter="{Binding ElementName=MailWindow}"/>

                    <!-- Close Button -->
                    <Button Style="{StaticResource ButtonWithIconStyle}" Content="{StaticResource CloseIcon}" ToolTip="{StaticResource CloseString}"
                            Background="{StaticResource TransparentButtonBackgroundColor}" BorderBrush="{StaticResource TransparentButtonBackgroundDarkColor}" Foreground="{StaticResource TransparentButtonForegroundColor}"
                            Width="{StaticResource HeaderButtonSize}" Height="{StaticResource HeaderButtonSize}"
                            Command="{Binding Close}" CommandParameter="{Binding ElementName=MailWindow}"/>

                </StackPanel>

            </Grid>

            <!-- Event for dragging -->
            <!--<Grid.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding DragMove}" CommandParameter="{Binding ElementName=MailWindow}"/>
            </Grid.InputBindings>-->
            <x:Code>
                <![CDATA[            
                    private void DragMoveWindow(object sender, System.Windows.Input.MouseButtonEventArgs e)
                    {
                        DragMove();
                    }
                ]]>
            </x:Code>

        </Border>

        <!-- Body -->
        <Grid Grid.Row="2">

            <Grid.ColumnDefinitions>
                <!-- LeftMenu -->
                <ColumnDefinition Width="1*" MinWidth="100"/>
                <!-- List -->
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <!-- LeftMenu -->
            <Grid Grid.Column="0">

                <ListBox x:Name="LeftMenu" ItemsSource="{Binding MessageTypes}" Style="{DynamicResource LeftMenuStyle}" SelectedItem="{Binding SelectedLeftMenuItem, Mode=OneWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding FilterList}" CommandParameter="{Binding ElementName=LeftMenu, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <ListBox.ItemTemplate>
                        <DataTemplate>

                            <Grid>

                                <TextBlock Text="{Binding Path=Text}" Style="{DynamicResource SecondaryTextStyle}" Margin="28,0,0,0"/>

                            </Grid>

                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>

            </Grid>

            <!-- List -->
            <Grid Grid.Column="1">

                <Grid.RowDefinitions>
                    <!-- Title -->
                    <RowDefinition Height="Auto"/>
                    <!-- Control Panel -->
                    <RowDefinition Height="Auto"/>
                    <!-- List -->
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Title TODO: Chips -->
                <TextBlock Grid.Row="0" Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource PrimaryTextStyle}" FontWeight="Bold" Margin="10"/>

                <!-- Control Panel -->
                <Grid Grid.Row="1">

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">

                        <!-- Sort Button -->
                        <Button Style="{StaticResource ButtonWithIconStyle}" Content="{StaticResource SortIcon}" ToolTip="{StaticResource SortByDateString}" 
                            Background="{StaticResource TransparentButtonBackgroundColor}" BorderBrush="{StaticResource TransparentButtonBackgroundDarkColor}" Foreground="{StaticResource TransparentButtonForegroundColor}"
                            Width="{StaticResource HeaderButtonSize}" Height="{StaticResource HeaderButtonSize}"
                            Command="{Binding SortList}" CommandParameter="Date"/>

                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                        <CheckBox Style="{DynamicResource CheckBoxSwitchStyle}" Content="Автоответчик" IsChecked="{Binding IsAutomaticResponderEnabled}"/>

                    </StackPanel>

                </Grid>

                <!-- List -->
                <ListBox Grid.Row="2" ItemsSource="{Binding Messages}" ItemContainerStyle="{DynamicResource MailListItemStyle}"
                         ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0">

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" MinWidth="{Binding Path=StatusID}" Style="{DynamicResource MailListItemButtonStyle}" 
                                        Command="{Binding DataContext.SendMail, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding Path=ID}"/>

                                <StackPanel Grid.Column="1" VerticalAlignment="Center">

                                    <TextBlock Style="{DynamicResource PrimaryTextStyle}" Text="{Binding Path=Sender}"/>
                                    <TextBlock Style="{DynamicResource SecondaryTextStyle}" Text="{Binding Path=Subject}"/>

                                </StackPanel>

                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>

            </Grid>

            <!-- FABs -->
            <StackPanel Grid.Column="1" Style="{StaticResource FABPanelStyle}">

                <!-- Word Button -->
                <Button Style="{StaticResource CircleButtonWithIconStyle}" Effect="{StaticResource FABShadowEffect}"
                    Tag="{StaticResource WordIcon}" Background="{StaticResource WordColor}" BorderBrush="{StaticResource WordDarkColor}" Foreground="{StaticResource ButtonForegroundColor}"
                    Margin="{StaticResource FABMargin}" Width="{StaticResource FABSize}" Height="{StaticResource FABSize}"
                    ToolTip="{StaticResource ExportToWordString}"/>

                <!-- Excel Button -->
                <Button Style="{StaticResource CircleButtonWithIconStyle}" Effect="{StaticResource FABShadowEffect}"
                    Tag="{StaticResource ExcelIcon}" Background="{StaticResource ExcelColor}" BorderBrush="{StaticResource ExcelDarkColor}" Foreground="{StaticResource ButtonForegroundColor}"
                    Margin="{StaticResource FABMargin}" Width="{StaticResource FABSize}" Height="{StaticResource FABSize}"
                    ToolTip="{StaticResource ExportToExcelString}"/>

            </StackPanel>

        </Grid>

    </Grid>

</Window>
