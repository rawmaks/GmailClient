<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PresentationLayer.Resources">

    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Width" Value="1224"/>
        <Setter Property="Height" Value="800"/>
        <Setter Property="MinWidth" Value="640"/>
        <Setter Property="MinHeight" Value="480"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="0"
                    CornerRadius="2"
                    GlassFrameThickness="0"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="3"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FABPanelStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Panel.ZIndex" Value="10"/>
    </Style>


    <!-- Text -->
    
    <Style x:Key="PrimaryTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="SecondaryTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Buttons -->

    <Style x:Key="ButtonWithIconStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Tag="{TemplateBinding Content}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Canvas Width="24" Height="24" Margin="14">
                                <Path Data="{Binding ElementName=Border, Path=Tag}" Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{Binding ElementName=Border, Path=BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonWithTextAndIconStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Tag="{TemplateBinding Tag}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <StackPanel Orientation="Horizontal">
                            <Viewbox Width="{TemplateBinding Height}" Height="{TemplateBinding Height}">
                                <Canvas Width="24" Height="24" Margin="14">
                                    <Path Data="{Binding ElementName=Border, Path=Tag}" Fill="{TemplateBinding Foreground}"/>
                                </Canvas>
                            </Viewbox>
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" Margin="0,0,10,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{Binding ElementName=Border, Path=BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircleButtonWithIconStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="Border" Tag="{TemplateBinding Tag}" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Ellipse x:Name="Ellipse" Fill="{TemplateBinding Background}"/>
                            <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <!--<Viewbox Width="36" Height="36">-->
                                <Canvas Width="24" Height="24" Margin="14">
                                    <Path Data="{Binding ElementName=Border, Path=Tag}" Fill="{TemplateBinding Foreground}"/>
                                </Canvas>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{Binding ElementName=Border, Path=BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TODO: Доделать -->
    <Style x:Key="RoundedButtonWithTextStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="Border" CornerRadius="10" Tag="{TemplateBinding Tag}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" Margin="10,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{Binding ElementName=Border, Path=BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- CheckBoxes -->

    <Style x:Key="CheckBoxSwitchStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="CheckBox">

                    <StackPanel Orientation="Horizontal" Margin="12,0,0,0">

                        <Viewbox Width="18" Height="18" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Canvas Width="24" Height="24">
                                <Path x:Name="Line" Data="M20,14H4V10H20" Fill="{DynamicResource LightGrayColor}"/>
                                <Path x:Name="Circle" Data="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" Fill="{DynamicResource DividerColor}" Margin="-12,0,0,0"/>
                            </Canvas>
                        </Viewbox>


                        <Label Content="{TemplateBinding Content}" Margin="10,0" Foreground="{DynamicResource SecondaryTextColor}" VerticalContentAlignment="Center" FontSize="14"/>

                    </StackPanel>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Line" Property="Path.Fill" Value="{DynamicResource AccentColor}"/>
                            <Setter TargetName="Circle" Property="Path.Fill" Value="{DynamicResource PrimaryColor}"/>
                            <Setter TargetName="Circle" Property="Path.Margin" Value="12,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Line" Property="Path.Fill" Value="{DynamicResource LightGrayColor}"/>
                            <Setter TargetName="Circle" Property="Path.Fill" Value="{DynamicResource DividerColor}"/>
                            <Setter TargetName="Circle" Property="Path.Margin" Value="-12,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Styles for MailList -->

    <Style x:Key="MailListItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource DarkGrayColor}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        <!--<EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>-->
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="ListBoxItem">

                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryLightColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MailListItemButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource LightIconColor}"/>
        <Setter Property="Margin" Value="{DynamicResource MailListItemButonMargin}"/>
        <Setter Property="Width" Value="{DynamicResource MailListItemButonSize}"/>
        <Setter Property="Height" Value="{DynamicResource MailListItemButonSize}"/>
        <Setter Property="ToolTip" Value="TODO"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="Border" Tag="{TemplateBinding Content}" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Ellipse x:Name="Ellipse" Fill="{TemplateBinding Background}"/>
                            <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Canvas Width="24" Height="24" Margin="14">

                                    <Path MinWidth="{TemplateBinding MinWidth}">
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Data" Value="{DynamicResource MailSendIconGeometry}"/>
                                                <Setter Property="Fill" Value="{DynamicResource LightIconColor}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="MinWidth" Value="1">
                                                        <Setter Property="Data" Value="{DynamicResource MailSendIconGeometry}"/>
                                                        <Setter Property="Fill" Value="{DynamicResource LightIconColor}"/>
                                                    </Trigger>
                                                    <Trigger Property="MinWidth" Value="2">
                                                        <Setter Property="Data" Value="{DynamicResource MailCheckIconGeometry}"/>
                                                        <Setter Property="Fill" Value="{DynamicResource DarkIconColor}"/>
                                                    </Trigger>
                                                    <Trigger Property="MinWidth" Value="3">
                                                        <Setter Property="Data" Value="{DynamicResource MailAlertIconGeometry}"/>
                                                        <Setter Property="Fill" Value="{DynamicResource LightIconColor}"/>
                                                    </Trigger>
                                                    <Trigger Property="MinWidth" Value="4">
                                                        <Setter Property="Data" Value="{DynamicResource MailSendIconGeometry}"/>
                                                        <Setter Property="Fill" Value="{DynamicResource LightIconColor}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                    
                                </Canvas>
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="MinWidth" Value="2">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource LightGrayColor}"/>
                            <Setter Property="ToolTip" Value="Ответ отправлен"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftMenuStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Height" Value="28"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Margin" Value="-10,0,0,0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                    <Setter Property="Template">
                        <Setter.Value>

                            <ControlTemplate TargetType="ListBoxItem">

                                <Border CornerRadius="14" Tag="{TemplateBinding Tag}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <ContentPresenter/>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource PrimaryLightColor}"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource LightGrayColor}"/>
                                    </Trigger>
                                    <Trigger Property="Tag" Value="1">

                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid" Width="{TemplateBinding Width}" HorizontalAlignment="Right">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="Auto" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ScrollBar}" TargetType="ScrollBar">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#FFCBCBCB" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="GridRoot" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}" Width="{TemplateBinding Width}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="#FFCBCBCB" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="#FFCBCBCB" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="Auto" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>