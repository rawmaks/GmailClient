<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PresentationLayer.Resources">

    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Width" Value="1224"/>
        <Setter Property="Height" Value="800"/>
        <Setter Property="MinWidth" Value="640"/>
        <Setter Property="MinHeight" Value="480"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
    </Style>

    <Style x:Key="FABPanelStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Panel.ZIndex" Value="10"/>
    </Style>

    
    <!-- Buttons -->

    <Style x:Key="ButtonWithIconStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Tag="{TemplateBinding Tag}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Canvas Width="24" Height="24" Margin="14">
                                <Path Data="{Binding ElementName=Border, Path=Tag}" Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{Binding ElementName=Border, Path=BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircleButtonWithIconStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="Border" Tag="{TemplateBinding Tag}" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Ellipse x:Name="Ellipse" Fill="{TemplateBinding Background}"/>
                            <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <!--<Viewbox Width="36" Height="36">-->
                                <Canvas Width="24" Height="24" Margin="14">
                                    <Path Data="{Binding ElementName=Border, Path=Tag}" Fill="{TemplateBinding Foreground}"/>
                                </Canvas>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{Binding ElementName=Border, Path=BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>